1,mkdir "fold"，创建文件夹
2,pwd ，显示当前目录
3，git init  创建一个新的仓库，也可以在一个有文件的地方创建
4，ls -ah 可以看隐藏目录
5,git add 文件,添加Git仓库的第一步
6,git commit -m '注释说明'
7,git status 此命令可以让我们时刻掌握仓库当前的状态，可以随时查看仓库的状态
8,git diff <某个文件> 查看指定文件的变化或者所有文件的变化
9,git log <--pretty=oneline>命令显示从最近到最远的提价日志，
10,git reset --hard HEAD^ 其中一个^是上一个版本，^^是上上个版本，上100个版本是HEAD~100
10_1,git reset -hard c3c003可以返回指定的版本，git版本回退非常快，因为Git在内部有个指针指向当前版本
11,git rest --hard reflog记录i
12,git add 只是把文件提交到暂存区，而并未提交仓库
13,git checkout -- file 可以丢弃工作区的修改,回到系统前一个版本或者是暂存区的版本
14,git reset HEAD <file>可以把暂存区的修改撤销掉(unstage)
15,rm file 可以删除文件
16,git rm file是从版本库中删除文件
17,git checkout -- file 其实是用版本库里面的文件替换工作区的文件。

远程仓库:
ssh-keygen -t rsa -C ""填上自己的邮箱

如果用github作为服务器的化，需要在github的个人设置中将本地文件中id_rsa.pub文件内容复制到SSH中，即可

如果需要搭建本地的git 服务器的化，也可以自己搭

本地推送git到远程库中
git remote add origin git@github.com:longsjj/gitLearnAgain.git
git push -u origin master

SSH警告
当你第一次使用Git的clone或者push命令连接GitHub时，会得到一个警告：

克隆一个项目的命令
git clone git@github.com:michaelliao/gitskills.git
https://github.com/michaelliao/gitskills.git

现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，
而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，
又不影响别人工作。

master指向主分支，head指向master,
当我们创建新的分支，例如dev时，Git新建了一个指针叫dev，指向master相同的提交，再把HEAD指向dev，就表示当前分支在dev上：

20,git checkout -b dev  首先，我们创建dev分支，然后切换到dev分支：

git branch dev创建分支
git checkout dev切换分支

git branch 查看当前分支

git checkout master 切换到主分支

git merge 分支，合并分支到当前分支，采用Fast-forward

git branch -d 分支，删除分支

冲突的解决,需要手动解决

当Git无法自动合并时，就必须首先解决冲突，解决冲突后提交，合并完成。
解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。

git log --graph 可以看到分支合并图。

